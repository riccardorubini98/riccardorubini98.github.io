setwd("G:/.shortcut-targets-by-id/1xhabgGZ15Dz_4N9EfL-XCJN9uiMOsj_b/Giustizia/Paper_PROMET")
library(readr)
df_path <- "result/FIGER.csv"
df <- read_csv(df_path)
library(tidyverse)
df_path <- "result/FIGER.csv"
df <- read_csv(df_path)
View(df)
a <- 'greedy'
a[1]
a[1][1]
substr(a, 1, 2)
substr(a, -2, -1)
substr(a, -2, 0)
library(stringr)
a <- train_s0.json
a <- "train_s0.json"
str_sub(a, -6, -6)
str_sub(a, -7, -6)
df <- df %>% mutate(shoot = str_sub(fit.data.dataset_paths.train, -7, -6)) %>%
select(-fit.data.dataset_paths.train)
library(readr)
library(tidyverse)
library(stringr)
df_path <- "result/FIGER.csv"
df <- read_csv(df_path)
df <- df %>% mutate(shoot = str_sub(fit.data.dataset_paths.train, -7, -6)) %>%
select(-fit.data.dataset_paths.train) %>% rename(seed=fit.seed_everything)
library(readr)
library(tidyverse)
library(stringr)
df_path <- "result/FIGER.csv"
df <- read_csv(df_path)
setwd("G:/.shortcut-targets-by-id/1xhabgGZ15Dz_4N9EfL-XCJN9uiMOsj_b/Giustizia/paper promet")
library(readr)
library(tidyverse)
library(stringr)
df_path <- "result/FIGER.csv"
df <- read_csv(df_path)
df <- df %>% mutate(shoot = str_sub(fit.data.dataset_paths.train, -7, -6)) %>%
select(-fit.data.dataset_paths.train) %>% rename(seed=fit.seed_everything)
View(df)
df_aggregate <- df %>% mutate(Name = as.factor(Name)) %>% group_by(Name) %>%
summarise('micro' = mean('test/micro/f1'), 'micro_std' = var('test/micro/f1')**0.5)
df_aggregate <- df %>% group_by(Name) %>%
summarise('micro' = mean('test/micro/f1'), 'micro_std' = var('test/micro/f1')**0.5)
df$Name <- as.factor(df$Name)
df_aggregate <- df %>% group_by(Name) %>%
summarise('micro' = mean('test/micro/f1'), 'micro_std' = var('test/micro/f1')**0.5)
View(df_aggregate)
df_aggregate <- df %>% group_by(Name) %>%
summarise(micro = mean('test/micro/f1'), micro_std = var('test/micro/f1')**0.5)
dplyr::last_dplyr_warnings()
summary(df)
mean(df$`test/micro/f1`)
df_aggregate <- df %>% group_by(Name) %>%
dplyr::summarise(micro = mean('test/micro/f1'), micro_std = var('test/micro/f1')**0.5)
df <- df %>% mutate(shoot = str_sub(fit.data.dataset_paths.train, -7, -6)) %>%
select(-fit.data.dataset_paths.train) %>% rename(seed=fit.seed_everything)
df_path <- "result/FIGER.csv"
df <- read_csv(df_path)
df <- df %>% mutate(shoot = str_sub(fit.data.dataset_paths.train, -7, -6)) %>%
select(-fit.data.dataset_paths.train) %>% rename(seed=fit.seed_everything)
df$Name <- as.factor(df$Name)
df_aggregate <- df %>% group_by(Name) %>%
dplyr::summarise(micro = mean('test/micro/f1'), micro_std = var('test/micro/f1')**0.5)
View(df_aggregate)
df_aggregate <- df %>% group_by(Name) %>%
dplyr::summarise(micro = mean('test/micro/f1'))
df_aggregate <- df %>% group_by(Name) %>%
dplyr::summarise(micro = mean(seed))
df_aggregate <- df %>% group_by(Name) %>%
dplyr::summarise(micro = mean(`test/micro/f1`))
View(df_aggregate)
df_aggregate <- df %>% group_by(Name) %>%
dplyr::summarise(micro = mean(`test/micro/f1`), micro_std = var(`test/micro/f1`)**0.5,
macroex = mean(`test/macro_example/f1`), macroex_std = var(`test/macro_example/f1`)**0.5,
macroty = mean(`test/macro_types/f1`), macroty_std = var(`test/macro_types/f1`)**0.5)
View(df_aggregate)
?order_by
?arrange
alignie <- df %>% filter(Name == 'ALIGNIE_BEST') %>% arrange(shoot, seed)
View(alignie)
alignie <- df %>% filter(Name == 'ALIGNIE_BEST') %>% arrange(shoot, seed) %>% select(`test/micro/f1`)
adapter <- df %>% filter(Name == 'ADAPTER_BEST') %>% arrange(shoot, seed) %>% select(`test/micro/f1`)
noadapter <- df %>% filter(Name == 'ANOADAPTER_BEST') %>% arrange(shoot, seed) %>% select(`test/micro/f1`)
View(noadapter)
View(adapter)
noadapter <- df %>% filter(Name == 'NOADAPTER_BEST') %>% arrange(shoot, seed) %>% select(`test/micro/f1`)
View(noadapter)
alignie <- df %>% filter(Name == 'ALIGNIE_BEST') %>% arrange(shoot, seed) %>% select(`test/micro/f1`) %>%
rename(value = `test/micro/f1`)
adapter <- df %>% filter(Name == 'ADAPTER_BEST') %>% arrange(shoot, seed) %>% select(`test/micro/f1`) %>%
rename(value = `test/micro/f1`)
noadapter <- df %>% filter(Name == 'NOADAPTER_BEST') %>% arrange(shoot, seed) %>% select(`test/micro/f1`) %>%
rename(value = `test/micro/f1`)
?pull
alignie <- df %>% filter(Name == 'ALIGNIE_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
alignie <- df %>% filter(Name == 'ALIGNIE_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
adapter <- df %>% filter(Name == 'ADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
noadapter <- df %>% filter(Name == 'NOADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
# t-test
# normalità
shapiro.test(alignie) # ok
shapiro.test(adapter) # ok
shapiro.test(noadapter) # ok
var.test(alignie, adapter) # ok
var.test(noadapter, alignie) # ok
# figer un po' al limite ma ok
# t-test paired
t1 <- t.test(adapter, alignie, paired = T)
t2 <- t.test(adapter, noadapter, paired = T)
t1$p.value
t2$p.value
df_ttest <- data.frame('stima'=c(t1$estimate, t2$estimate,)*100,
'left'=c(t1$conf.int[1], t2$conf.int[1])*100,
'right' = c(t1$conf.int[2], t2$conf.int[2])*100,
'p-value' = c(t1$p.value, t2$p.value),
'confronto' = c('ALIGNIE','NOADAPTER'))
ttest <- data.frame('stima'=c(t1$estimate, t2$estimate)*100,
'left'=c(t1$conf.int[1], t2$conf.int[1])*100,
'right' = c(t1$conf.int[2], t2$conf.int[2])*100,
'p-value' = c(t1$p.value, t2$p.value),
'confronto' = c('ALIGNIE','NOADAPTER'))
View(ttest)
ttest
ttest <- data.frame('confronto' = c('ALIGNIE','NOADAPTER'),
'stima'=c(t1$estimate, t2$estimate)*100,
'left'=c(t1$conf.int[1], t2$conf.int[1])*100,
'right' = c(t1$conf.int[2], t2$conf.int[2])*100,
'p-value' = c(t1$p.value, t2$p.value))
ttest
df_path <- "result/BBN.csv"
df <- read_csv(df_path)
df <- df %>% mutate(shoot = str_sub(fit.data.dataset_paths.train, -7, -6)) %>%
select(-fit.data.dataset_paths.train) %>% rename(seed=fit.seed_everything)
df$Name <- as.factor(df$Name)
df_aggregate <- df %>% group_by(Name) %>%
dplyr::summarise(micro = mean(`test/micro/f1`), micro_std = var(`test/micro/f1`)**0.5,
macroex = mean(`test/macro_example/f1`), macroex_std = var(`test/macro_example/f1`)**0.5,
macroty = mean(`test/macro_types/f1`), macroty_std = var(`test/macro_types/f1`)**0.5)
df_aggregate
alignie <- df %>% filter(Name == 'ALIGNIE_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
adapter <- df %>% filter(Name == 'ADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
noadapter <- df %>% filter(Name == 'NOADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
# t-test
# normalità
shapiro.test(alignie)
shapiro.test(adapter)
shapiro.test(noadapter)
# figer tutto ok
# varianza
var.test(alignie, adapter)
var.test(noadapter, alignie)
t1 <- t.test(adapter, alignie, paired = T)
t2 <- t.test(adapter, noadapter, paired = T)
ttest <- data.frame('confronto' = c('ALIGNIE','NOADAPTER'),
'stima'=c(t1$estimate, t2$estimate)*100,
'left'=c(t1$conf.int[1], t2$conf.int[1])*100,
'right' = c(t1$conf.int[2], t2$conf.int[2])*100,
'p-value' = c(t1$p.value, t2$p.value))
ttest
View(df_aggregate)
library(readr)
library(tidyverse)
library(stringr)
# df_path <- "result/FEWNERD.csv"
df_path <- "result/BBN.csv"
df <- read_csv(df_path)
df <- df %>% mutate(shoot = str_sub(fit.data.dataset_paths.train, -7, -6)) %>%
select(-fit.data.dataset_paths.train) %>% rename(seed=fit.seed_everything)
df$Name <- as.factor(df$Name)
df_aggregate <- df %>% group_by(Name) %>%
dplyr::summarise(micro = mean(`test/micro/f1`), micro_std = var(`test/micro/f1`)**0.5,
macroex = mean(`test/macro_example/f1`), macroex_std = var(`test/macro_example/f1`)**0.5,
macroty = mean(`test/macro_types/f1`), macroty_std = var(`test/macro_types/f1`)**0.5)
df_aggregate
alignie <- df %>% filter(Name == 'ALIGNIE_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
adapter <- df %>% filter(Name == 'ADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
noadapter <- df %>% filter(Name == 'NOADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
# t-test
# normalità
shapiro.test(alignie)
shapiro.test(adapter)
shapiro.test(noadapter)
# figer tutto ok; BBN tutto ok
# varianza
var.test(alignie, adapter)
var.test(noadapter, alignie)
t1 <- t.test(adapter, alignie, paired = T)
t2 <- t.test(adapter, noadapter, paired = T)
ttest <- data.frame('confronto' = c('ALIGNIE','NOADAPTER'),
'stima'=c(t1$estimate, t2$estimate)*100,
'left'=c(t1$conf.int[1], t2$conf.int[1])*100,
'right' = c(t1$conf.int[2], t2$conf.int[2])*100,
'p-value' = c(t1$p.value, t2$p.value))
ttest
View(df)
View(df_aggregate)
df_path <- "result/FEWNERD.csv"
df <- read_csv(df_path)
df <- df %>% mutate(shoot = str_sub(fit.data.dataset_paths.train, -7, -6)) %>%
select(-fit.data.dataset_paths.train) %>% rename(seed=fit.seed_everything)
df$Name <- as.factor(df$Name)
df_aggregate <- df %>% group_by(Name) %>%
dplyr::summarise(micro = mean(`test/micro/f1`), micro_std = var(`test/micro/f1`)**0.5,
macroex = mean(`test/macro_example/f1`), macroex_std = var(`test/macro_example/f1`)**0.5,
macroty = mean(`test/macro_types/f1`), macroty_std = var(`test/macro_types/f1`)**0.5)
df_aggregate
df_path <- "result/BBN.csv"
df <- read_csv(df_path)
df <- df %>% mutate(shoot = str_sub(fit.data.dataset_paths.train, -7, -6)) %>%
select(-fit.data.dataset_paths.train) %>% rename(seed=fit.seed_everything)
df$Name <- as.factor(df$Name)
df_aggregate <- df %>% group_by(Name) %>%
dplyr::summarise(micro = mean(`test/micro/f1`), micro_std = var(`test/micro/f1`)**0.5,
macroex = mean(`test/macro_example/f1`), macroex_std = var(`test/macro_example/f1`)**0.5,
macroty = mean(`test/macro_types/f1`), macroty_std = var(`test/macro_types/f1`)**0.5)
df_aggregate
df_path <- "result/FIGER.csv"
# df_path <- "result/BBN.csv"
df <- read_csv(df_path)
df <- df %>% mutate(shoot = str_sub(fit.data.dataset_paths.train, -7, -6)) %>%
select(-fit.data.dataset_paths.train) %>% rename(seed=fit.seed_everything)
df$Name <- as.factor(df$Name)
df_aggregate <- df %>% group_by(Name) %>%
dplyr::summarise(micro = mean(`test/micro/f1`), micro_std = var(`test/micro/f1`)**0.5,
macroex = mean(`test/macro_example/f1`), macroex_std = var(`test/macro_example/f1`)**0.5,
macroty = mean(`test/macro_types/f1`), macroty_std = var(`test/macro_types/f1`)**0.5)
df_aggregate
df_path <- "result/BBN.csv"
df <- read_csv(df_path)
df <- df %>% mutate(shoot = str_sub(fit.data.dataset_paths.train, -7, -6)) %>%
select(-fit.data.dataset_paths.train) %>% rename(seed=fit.seed_everything)
df$Name <- as.factor(df$Name)
df_aggregate <- df %>% group_by(Name) %>%
dplyr::summarise(micro = mean(`test/micro/f1`), micro_std = var(`test/micro/f1`)**0.5,
macroex = mean(`test/macro_example/f1`), macroex_std = var(`test/macro_example/f1`)**0.5,
macroty = mean(`test/macro_types/f1`), macroty_std = var(`test/macro_types/f1`)**0.5)
df_aggregate
?t.test
library(readr)
library(tidyverse)
library(stringr)
df_path <- "result/FEWNERD.csv"
# df_path <- "result/FIGER.csv"
# df_path <- "result/BBN.csv"
df <- read_csv(df_path)
df <- df %>% mutate(shoot = str_sub(fit.data.dataset_paths.train, -7, -6)) %>%
select(-fit.data.dataset_paths.train) %>% rename(seed=fit.seed_everything)
df$Name <- as.factor(df$Name)
df_aggregate <- df %>% group_by(Name) %>%
dplyr::summarise(micro = mean(`test/micro/f1`), micro_std = var(`test/micro/f1`)**0.5,
macroex = mean(`test/macro_example/f1`), macroex_std = var(`test/macro_example/f1`)**0.5,
macroty = mean(`test/macro_types/f1`), macroty_std = var(`test/macro_types/f1`)**0.5)
df_aggregate
# micro f1
alignie <- df %>% filter(Name == 'ALIGNIE_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
adapter <- df %>% filter(Name == 'ADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
noadapter <- df %>% filter(Name == 'NOADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
t1 <- t.test(adapter, alignie, paired = T)
library(readr)
library(tidyverse)
library(stringr)
df_path <- "result/FEWNERD.csv"
# df_path <- "result/FIGER.csv"
# df_path <- "result/BBN.csv"
df <- read_csv(df_path)
df <- df %>% mutate(shoot = str_sub(fit.data.dataset_paths.train, -7, -6)) %>%
select(-fit.data.dataset_paths.train) %>% rename(seed=fit.seed_everything)
df$Name <- as.factor(df$Name)
df_aggregate <- df %>% group_by(Name) %>%
dplyr::summarise(micro = mean(`test/micro/f1`), micro_std = var(`test/micro/f1`)**0.5,
macroex = mean(`test/macro_example/f1`), macroex_std = var(`test/macro_example/f1`)**0.5,
macroty = mean(`test/macro_types/f1`), macroty_std = var(`test/macro_types/f1`)**0.5)
df_aggregate
# micro f1
alignie <- df %>% filter(Name == 'ALIGNIE_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
adapter <- df %>% filter(Name == 'ADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
noadapter <- df %>% filter(Name == 'NOADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
t1 <- t.test(adapter, alignie, paired = T)
alignie <- df %>% filter(Name == 'ALIGNIE') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
adapter <- df %>% filter(Name == 'ADAPTER') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
noadapter <- df %>% filter(Name == 'NOADAPTER') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
t1 <- t.test(adapter, alignie, paired = T)
t2 <- t.test(noadapter, alignie, paired = T)
ttest <- data.frame('confronto' = c('ALIGNIE','NOADAPTER'),
'stima'=c(t1$estimate, t2$estimate)*100,
'left'=c(t1$conf.int[1], t2$conf.int[1])*100,
'right' = c(t1$conf.int[2], t2$conf.int[2])*100,
'p-value' = c(t1$p.value, t2$p.value))
ttest
options(scipen=999)
alignie <- df %>% filter(Name == 'ALIGNIE') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
adapter <- df %>% filter(Name == 'ADAPTER') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
noadapter <- df %>% filter(Name == 'NOADAPTER') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
t1 <- t.test(adapter, alignie, paired = T)
t2 <- t.test(noadapter, alignie, paired = T)
ttest <- data.frame('confronto' = c('ALIGNIE','NOADAPTER'),
'stima'=c(t1$estimate, t2$estimate)*100,
'left'=c(t1$conf.int[1], t2$conf.int[1])*100,
'right' = c(t1$conf.int[2], t2$conf.int[2])*100,
'p-value' = c(t1$p.value, t2$p.value))
ttest
alignie <- df %>% filter(Name == 'ALIGNIE') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
adapter <- df %>% filter(Name == 'ADAPTER') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
noadapter <- df %>% filter(Name == 'NOADAPTER') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
t1 <- t.test(adapter, alignie, paired = T)
t2 <- t.test(noadapter, alignie, paired = T)
ttest <- data.frame('confronto' = c('ADAPTER','NOADAPTER'),
'stima'=c(t1$estimate, t2$estimate)*100,
'left'=c(t1$conf.int[1], t2$conf.int[1])*100,
'right' = c(t1$conf.int[2], t2$conf.int[2])*100,
'p-value' = c(t1$p.value, t2$p.value))
ttest
alignie <- df %>% filter(Name == 'ALIGNIE') %>% arrange(shoot, seed) %>% pull(`test/macro_example/f1`)
adapter <- df %>% filter(Name == 'ADAPTER') %>% arrange(shoot, seed) %>% pull(`test/macro_example/f1`)
noadapter <- df %>% filter(Name == 'NOADAPTER') %>% arrange(shoot, seed) %>% pull(`test/macro_example/f1`)
t1 <- t.test(adapter, alignie, paired = T)
t2 <- t.test(noadapter, alignie, paired = T)
ttest <- data.frame('confronto' = c('ADAPTER','NOADAPTER'),
'stima'=c(t1$estimate, t2$estimate)*100,
'left'=c(t1$conf.int[1], t2$conf.int[1])*100,
'right' = c(t1$conf.int[2], t2$conf.int[2])*100,
'p-value' = c(t1$p.value, t2$p.value))
ttest
alignie <- df %>% filter(Name == 'ALIGNIE') %>% arrange(shoot, seed) %>% pull(`test/macro_types/f1`)
adapter <- df %>% filter(Name == 'ADAPTER') %>% arrange(shoot, seed) %>% pull(`test/macro_types/f1`)
noadapter <- df %>% filter(Name == 'NOADAPTER') %>% arrange(shoot, seed) %>% pull(`test/macro_types/f1`)
t1 <- t.test(adapter, alignie, paired = T)
t2 <- t.test(noadapter, alignie, paired = T)
ttest <- data.frame('confronto' = c('ADAPTER','NOADAPTER'),
'stima'=c(t1$estimate, t2$estimate)*100,
'left'=c(t1$conf.int[1], t2$conf.int[1])*100,
'right' = c(t1$conf.int[2], t2$conf.int[2])*100,
'p-value' = c(t1$p.value, t2$p.value))
ttest
df_path <- "result/BBN.csv"
df <- read_csv(df_path)
df <- df %>% mutate(shoot = str_sub(fit.data.dataset_paths.train, -7, -6)) %>%
select(-fit.data.dataset_paths.train) %>% rename(seed=fit.seed_everything)
df$Name <- as.factor(df$Name)
df_aggregate <- df %>% group_by(Name) %>%
dplyr::summarise(micro = mean(`test/micro/f1`), micro_std = var(`test/micro/f1`)**0.5,
macroex = mean(`test/macro_example/f1`), macroex_std = var(`test/macro_example/f1`)**0.5,
macroty = mean(`test/macro_types/f1`), macroty_std = var(`test/macro_types/f1`)**0.5)
df_aggregate
# micro f1
alignie <- df %>% filter(Name == 'ALIGNIE') %>% arrange(shoot, seed) %>% pull(`test/macro_types/f1`)
adapter <- df %>% filter(Name == 'ADAPTER') %>% arrange(shoot, seed) %>% pull(`test/macro_types/f1`)
noadapter <- df %>% filter(Name == 'NOADAPTER') %>% arrange(shoot, seed) %>% pull(`test/macro_types/f1`)
t1 <- t.test(adapter, alignie, paired = T)
alignie <- df %>% filter(Name == 'ALIGNIE_BEST') %>% arrange(shoot, seed) %>% pull(`test/macro_types/f1`)
adapter <- df %>% filter(Name == 'ADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/macro_types/f1`)
noadapter <- df %>% filter(Name == 'NOADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/macro_types/f1`)
t1 <- t.test(adapter, alignie, paired = T)
t2 <- t.test(noadapter, alignie, paired = T)
ttest <- data.frame('confronto' = c('ADAPTER','NOADAPTER'),
'stima'=c(t1$estimate, t2$estimate)*100,
'left'=c(t1$conf.int[1], t2$conf.int[1])*100,
'right' = c(t1$conf.int[2], t2$conf.int[2])*100,
'p-value' = c(t1$p.value, t2$p.value))
ttest
alignie <- df %>% filter(Name == 'ALIGNIE_BEST') %>% arrange(shoot, seed) %>% pull(`test/macro_example/f1`)
adapter <- df %>% filter(Name == 'ADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/macro_example/f1`)
noadapter <- df %>% filter(Name == 'NOADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/macro_example/f1`)
t1 <- t.test(adapter, alignie, paired = T)
t2 <- t.test(noadapter, alignie, paired = T)
ttest <- data.frame('confronto' = c('ADAPTER','NOADAPTER'),
'stima'=c(t1$estimate, t2$estimate)*100,
'left'=c(t1$conf.int[1], t2$conf.int[1])*100,
'right' = c(t1$conf.int[2], t2$conf.int[2])*100,
'p-value' = c(t1$p.value, t2$p.value))
ttest
alignie <- df %>% filter(Name == 'ALIGNIE_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
adapter <- df %>% filter(Name == 'ADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
noadapter <- df %>% filter(Name == 'NOADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
t1 <- t.test(adapter, alignie, paired = T)
t2 <- t.test(noadapter, alignie, paired = T)
ttest <- data.frame('confronto' = c('ADAPTER','NOADAPTER'),
'stima'=c(t1$estimate, t2$estimate)*100,
'left'=c(t1$conf.int[1], t2$conf.int[1])*100,
'right' = c(t1$conf.int[2], t2$conf.int[2])*100,
'p-value' = c(t1$p.value, t2$p.value))
ttest
library(readr)
library(tidyverse)
library(stringr)
options(scipen=999)
# df_path <- "result/FEWNERD.csv"
df_path <- "result/FIGER.csv"
# df_path <- "result/BBN.csv"
df <- read_csv(df_path)
df <- df %>% mutate(shoot = str_sub(fit.data.dataset_paths.train, -7, -6)) %>%
select(-fit.data.dataset_paths.train) %>% rename(seed=fit.seed_everything)
df$Name <- as.factor(df$Name)
df_aggregate <- df %>% group_by(Name) %>%
dplyr::summarise(micro = mean(`test/micro/f1`), micro_std = var(`test/micro/f1`)**0.5,
macroex = mean(`test/macro_example/f1`), macroex_std = var(`test/macro_example/f1`)**0.5,
macroty = mean(`test/macro_types/f1`), macroty_std = var(`test/macro_types/f1`)**0.5)
df_aggregate
# micro f1
alignie <- df %>% filter(Name == 'ALIGNIE_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
adapter <- df %>% filter(Name == 'ADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
noadapter <- df %>% filter(Name == 'NOADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/micro/f1`)
t1 <- t.test(adapter, alignie, paired = T)
t2 <- t.test(noadapter, alignie, paired = T)
ttest <- data.frame('confronto' = c('ADAPTER','NOADAPTER'),
'stima'=c(t1$estimate, t2$estimate)*100,
'left'=c(t1$conf.int[1], t2$conf.int[1])*100,
'right' = c(t1$conf.int[2], t2$conf.int[2])*100,
'p-value' = c(t1$p.value, t2$p.value))
ttest
alignie <- df %>% filter(Name == 'ALIGNIE_BEST') %>% arrange(shoot, seed) %>% pull(`test/macro_example/f1`)
adapter <- df %>% filter(Name == 'ADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/macro_example/f1`)
noadapter <- df %>% filter(Name == 'NOADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/macro_example/f1`)
t1 <- t.test(adapter, alignie, paired = T)
t2 <- t.test(noadapter, alignie, paired = T)
ttest <- data.frame('confronto' = c('ADAPTER','NOADAPTER'),
'stima'=c(t1$estimate, t2$estimate)*100,
'left'=c(t1$conf.int[1], t2$conf.int[1])*100,
'right' = c(t1$conf.int[2], t2$conf.int[2])*100,
'p-value' = c(t1$p.value, t2$p.value))
ttest
alignie <- df %>% filter(Name == 'ALIGNIE_BEST') %>% arrange(shoot, seed) %>% pull(`test/macro_types/f1`)
adapter <- df %>% filter(Name == 'ADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/macro_types/f1`)
noadapter <- df %>% filter(Name == 'NOADAPTER_BEST') %>% arrange(shoot, seed) %>% pull(`test/macro_types/f1`)
t1 <- t.test(adapter, alignie, paired = T)
t2 <- t.test(noadapter, alignie, paired = T)
ttest <- data.frame('confronto' = c('ADAPTER','NOADAPTER'),
'stima'=c(t1$estimate, t2$estimate)*100,
'left'=c(t1$conf.int[1], t2$conf.int[1])*100,
'right' = c(t1$conf.int[2], t2$conf.int[2])*100,
'p-value' = c(t1$p.value, t2$p.value))
ttest
