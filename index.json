[{"authors":null,"categories":null,"content":"I am a dedicated researcher in the field of Machine Learning and Artificial Intelligence, specializing primarily in Natural Language Processing (NLP). While my formal education defines me as a Data Scientist, deep down I’m still a Statistician. My passion lies in the world of data, particularly the art of Data Visualization, where I make use of my creativity to transform intricate information into captivating visual narratives. Python and R are my trusty companions in the programming world, having been the bedrock of my academic journey and the tools through which I’ve brought numerous projects and prototypes to life. What truly fuels my enthusiasm for this work is the opportunity to blend innovative ideas with established methodologies, resulting in ingenious solutions that address a diverse range of challenges in novel and highly efficient ways.\n","date":1607817600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1607817600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am a dedicated researcher in the field of Machine Learning and Artificial Intelligence, specializing primarily in Natural Language Processing (NLP). While my formal education defines me as a Data Scientist, deep down I’m still a Statistician.","tags":null,"title":"Riccardo Rubini","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://riccardorubini98.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":"In my thesis, I focused on addressing the Fine-grained Entity Typing task (FET), specifically in few-shot scenario, where only a limited amount of annotated data is available for training. In recent years, there has been a significant advancement in using prompt-based approaches for FET, leveraging Pre-trained Language Models (PLMs) MLM capabilities. These approaches, particularly in few-shot scenarios, have demonstrated superior performance by transforming the entity classification task into a cloze-style task based on masked tokens.\nHowever, these existing methods have encountered challenges, primarily related to the requirement of defining specific keywords for each label in the classification set. In my research, I introduced a novel approach called PROMET (PROmpt-tuning using implicit Mask filling for Entity Typing) to overcome these issues. PROMET utilizes the information extracted from the cloze-style task by directly leveraging the masked token embeddings, eliminating the need to pass through the masked language modeling head of the PLM. This innovation enables PROMET to operate without the keyword search and reduces its parameter count significantly, making it more efficient compared to other prompt-based methods.\nFurthermore, I developed two distinct implementation modes for PROMET: one referred to as flat, which consists of a single model, and another called stack, involving a hierarchical system of classifiers. The stack mode takes into account the inherent hierarchy among labels in the classification set.\nBenchmark results from my research demonstrated that PROMET in the flat mode achieves performance that aligns with the current state of the art, despite its simplicity compared to other approaches. PROMET in flat mode outperforms the stack mode. However, the latter is characterized by greater flexibility and modularity, aspects that make it preferable in the ontology specialization scenario.\nIn summary, my thesis project introduced PROMET, a novel prompt-based approach for the Fine-grained Entity Typing task, which addresses the challenges of few-shot learning while maintaining competitive performance and offering flexibility through different implementation modes.\nFull Thesis can be accessed at this link\n","date":1682899200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682899200,"objectID":"5ba1b968f0c863c828a13180c7e5f029","permalink":"https://riccardorubini98.github.io/project/promet/","publishdate":"2023-05-01T00:00:00Z","relpermalink":"/project/promet/","section":"project","summary":"An adaptive prompt-based approach for Fine-grained Entity Typing","tags":["Deep Learning"],"title":"MSc Thesis - PROMET","type":"project"},{"authors":null,"categories":null,"content":"This infographic was crafted as a contribution to the “Data (in) context - Thinking with Data” competition. This competition was organized by ISTAT, Società Statistica Italiana (SIS), and the University of Salerno, with the sponsorship of Banca Campania Centro.\nThe poster focuses on the issue of loneliness in Italy, examining this phenomenon across different age groups, genders, and geographical regions. To create this infographic, original data from ISTAT was carefully processed to make it suitable for data visualization. The visual elements were generated using R and the ggplot2 package, and later refined, enriched, and standardized in Illustrator.\nThis poster received the top prize in the “Best Poster for Communicative Effectiveness” category.\n","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1672531200,"objectID":"6b3b6d45ed4fc914ccc9281db475a9c8","permalink":"https://riccardorubini98.github.io/project/italiasolitaria/","publishdate":"2023-01-01T00:00:00Z","relpermalink":"/project/italiasolitaria/","section":"project","summary":"Winner of the *\"Data (in) context - Thinking with Data\"* award for \"Best Poster for Communicative Effectiveness\"","tags":["Other"],"title":"L'Italia Solitaria","type":"project"},{"authors":null,"categories":null,"content":"In this computer vision project, our goal was to classify architectural heritage images. We had a dataset of 10,235 training images, each sized at 128x128 pixels, and these images fell into 10 different architectural categories.\nTo build our model, we followed a gradual approach. We began with simple, shallow neural networks and progressively deepened them as we advanced in the model development process. This allowed us to create more complex models over time.\nTo ensure that our model wouldn’t memorize the training data but instead generalize well to new, unseen images, we employed various techniques for regularization. These techniques helped us strike a balance between model complexity and generalization ability.\nOne of the key strategies we implemented was data augmentation. With this technique, we expanded our training dataset by applying transformations to the existing images. Specifically, we used horizontal flipping and random zoom, effectively tripling our training data. This helped our model learn better from a wider variety of examples.\nOur model could correctly classify approximately 8 out of 10 test images. This demonstrated its capability to accurately identify architectural elements in the images.\nAdditionally, we assessed our model’s performance using the F1 score, which combines precision and recall. 9 out of the 10 architectural categories achieved a good F1 score, surpassing the 0.70 threshold. This indicated that our model excelled in most of categories.\nThis project was developed on Python via the Keras library.\n","date":1646092800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1646092800,"objectID":"f030cb248db7f0e17f5e3519e3386eb1","permalink":"https://riccardorubini98.github.io/project/computer-vision/","publishdate":"2022-03-01T00:00:00Z","relpermalink":"/project/computer-vision/","section":"project","summary":"Image recognition of architectural heritage images","tags":["Deep Learning"],"title":"Image Classification","type":"project"},{"authors":null,"categories":null,"content":"In this project, we conducted two common tasks in text mining using a large collection of e-book reviews from Amazon.com. Our main objectives were as follows:\nText Classification for Sentiment Analysis: Our first goal was to automatically determine the sentiment expressed in the reviews, whether they were positive or negative. To accomplish this, we employed a supervised technique known as Text Classification. After experimenting with various methods, we found that the lasso logistic classifier provided the most satisfactory results. It achieved a recall rate of 92% for positive reviews and 90% for negative reviews. In simpler terms, this means that our model was able to accurately identify whether a review was positive or negative in the majority of cases.\nTopic Modeling: The second objective of our project was to uncover the main topics discussed in the e-book reviews. We used an unsupervised technique called Topic Modeling for this purpose. Imagine it as a method to identify the key themes or subjects that frequently came up in the reviews. After trying different approaches, we discovered that the algebraic Non-negative Matrix Factorization (NMF) technique was the most effective in identifying reliable topics. These topics were related to various aspects, such as different shades of opinions and various categories of books that were being reviewed.\nIn summary, our project involved analyzing a large number of e-book reviews from Amazon.com. We used machine learning techniques to determine whether the reviews were positive or negative (sentiment analysis) and to identify the main topics that emerged from these reviews (topic modeling). The results of our efforts showed that our models were quite accurate in sentiment analysis, and we were able to extract meaningful topics from the reviews using advanced mathematical techniques like NMF.\n","date":1643673600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1643673600,"objectID":"af73aacee36f8adf81133f670b737d5a","permalink":"https://riccardorubini98.github.io/project/amazon-book-review/","publishdate":"2022-02-01T00:00:00Z","relpermalink":"/project/amazon-book-review/","section":"project","summary":"Sentiment analysis and topic modelling of Amazon e-books reviews","tags":["Machine Learning"],"title":"Reviews analysis and processing","type":"project"},{"authors":null,"categories":null,"content":"FANTAORACOLO is a web application designed to help fantasy football enthusiasts make informed decisions about which players to include in their fantasy teams. It achieves this by analyzing real data and using statistical techniques to recommend the best player choices for your fantasy football lineup, increasing your chances of winning your next match.\nHere are the key components of the project:\nWorking Demo Web App: The project involves creating a functional web application (demo at this LINK) where users can access the FANTAORACOLO service. This web app will provide an easy and user-friendly interface for users to input their fantasy football team details and receive personalized player recommendations.\nWeb Scraping: To provide accurate and up-to-date recommendations, FANTAORACOLO performs web scraping. This means it collects football and fantasy football data from various online sources. This data includes player statistics, team performance, and other relevant information necessary to make informed suggestions.\nBusiness Model Canvas: The project also includes the development of a business model canvas. This canvas outlines the startup’s strategy and plans for the web app. It covers aspects such as target audience, revenue streams, key partners, and channels for reaching users. This canvas serves as a roadmap for the project’s growth and sustainability.\n","date":1640995200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1640995200,"objectID":"055e4c098f5d19d59a7c5db9ff099909","permalink":"https://riccardorubini98.github.io/project/fantaoracolo/","publishdate":"2022-01-01T00:00:00Z","relpermalink":"/project/fantaoracolo/","section":"project","summary":"Design and implementation of a working demo web app to help fantasy football line up decision.","tags":["Other"],"title":"Fantaoracolo","type":"project"},{"authors":null,"categories":null,"content":"In this project, we conducted an analysis and forecasting of carbon monoxide (CO) emissions using a combination of statistical and deep learning techniques. We explored various modeling approaches, including AutoRegressive Integrated Moving Average (ARIMA) models, Unobserved Components Model (UCM), and Long Short-Term Memory (LSTM) deep neural networks, to select the most suitable model. Our final selected model achieved a Mean Absolute Percentage Error (MAPE) of 12%, demonstrating its accuracy in predicting CO emissions\n","date":1640995200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1640995200,"objectID":"e6c4171b3bda35c314832458341d0a1a","permalink":"https://riccardorubini98.github.io/project/timeseries/","publishdate":"2022-01-01T00:00:00Z","relpermalink":"/project/timeseries/","section":"project","summary":"Analysis and Forecasting of CO emissions","tags":["Machine Learning"],"title":"Time series analysis","type":"project"},{"authors":null,"categories":null,"content":"The primary goal of this project is to better understand and manage customer churn (when customers stop using our services) and to explore the potential impact of mail marketing in reducing churn rates.\nProject Components:\nAnti-Churn Model: We will build a specialized model known as an “anti-churn model.” This model helps us predict the likelihood of each customer leaving our company’s services. By analyzing various factors, such as customer behavior and engagement, we can estimate the probability that a customer might stop using our products or services.\nRFM Segmentation: In addition to the anti-churn model, we will use a technique called “RFM segmentation.” RFM stands for Recency, Frequency, and Monetary value. This segmentation method helps us identify our most valuable customers based on how recently they made a purchase, how often they do so, and how much money they spend. Understanding these high-value customers is crucial for targeted marketing efforts.\nMail Marketing Analysis: We will also investigate the effectiveness of mail marketing campaigns in reducing customer churn rates. This involves sending promotional materials or offers to customers via physical mail. We will analyze whether these mail marketing efforts have a positive impact on retaining customers and if they can help decrease churn.\nProject Benefits:\nImproved Customer Retention: By identifying customers at risk of leaving and high-value customers, we can implement strategies to keep valuable clients and reduce churn. Our strategy provides a 20% increase in performance over the classical approach Cost-Efficient Marketing: The analysis of mail marketing effectiveness will help us determine whether this traditional marketing approach is worth the investment in retaining customers. Data-Driven Decisions: The project will rely on data analysis to make informed decisions, ensuring our marketing efforts are targeted and efficient.\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"bb57b27b2559a439d6d43a887c7f1dc0","permalink":"https://riccardorubini98.github.io/project/webmarketing/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/project/webmarketing/","section":"project","summary":"Design and implementation of a strategy to keep high-value clients.","tags":["Machine Learning"],"title":"Digital Marketing","type":"project"},{"authors":null,"categories":null,"content":"In this data management and data visualization project, our analysis involves three key components:\nManaging Data with MongoDB Document Database: To efficiently handle and store data, we utilized MongoDB, a robust document database. This allowed us to organize and manage our dataset effectively, ensuring it is easily accessible and scalable.\nCategorization of Wikipedia Pages: Our project involved the categorization of Wikipedia pages with a system that, among other things, uses a third parts algorithm. This system was designed to query a Knowledge Base (KB), specifically Wikidata, and leverage various online tools accessible via APIs. Through this process, we were able to categorize Wikipedia pages accurately and efficiently, enhancing data organization and accessibility.\nConstruction of Interactive Infographics with Tableau: To make the categorized data more accessible and insightful, we constructed interactive infographics using Tableau. These infographics provided users with a dynamic and visually engaging way to explore and interact with the categorized data.\nEvaluation Using Questionnaires and User Tests: To ensure the effectiveness of our data visualization solution, we conducted rigorous evaluations. This included gathering feedback through questionnaires from users who interacted with our Tableau-based infographics. Additionally, we conducted user tests to assess the usability and user-friendliness of our visualization tools. This feedback helped us refine our design and ensure that the final product met the needs and expectations of our target audience.\nThe full report is published HERE\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"5cd46d7ded662f6415cd43f9effcdd99","permalink":"https://riccardorubini98.github.io/project/wikitrend/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/project/wikitrend/","section":"project","summary":"Analysis and graphical presentation of Wikipedia users' search behaviors","tags":["Other"],"title":"Wikitrend","type":"project"},{"authors":["Riccardo Rubini","吳恩達"],"categories":["Demo","教程"],"content":"import libr print(\u0026#39;hello\u0026#39;) Overview The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more Get Started 👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem Hugo Academic CLI: Automatically import publications from BibTeX Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files. Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://riccardorubini98.github.io/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":null,"categories":null,"content":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you’ll find some examples of the types of technical content that can be rendered with Wowchemy.\nExamples Code Wowchemy supports a Markdown extension for highlighting code syntax. You can customize the styles under the syntax_highlighter option in your config/_default/params.yaml file.\n```python import pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() ``` renders as\nimport pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() Mindmaps Wowchemy supports a Markdown extension for mindmaps.\nSimply insert a Markdown markmap code block and optionally set the height of the mindmap as shown in the example below.\nA simple mindmap defined as a Markdown list:\n```markmap {height=\u0026#34;200px\u0026#34;} - Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal ``` renders as\n- Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal A more advanced mindmap with formatting, code blocks, and math:\n```markmap - Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ ``` renders as\n- Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ Charts Wowchemy supports the popular Plotly format for interactive charts.\nSave your Plotly JSON in your page folder, for example line-chart.json, and then add the {{\u0026lt; chart data=\u0026#34;line-chart\u0026#34; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\nYou might also find the Plotly JSON Editor useful.\nMath Wowchemy supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.yaml file.\nTo render inline or block math, wrap your LaTeX math with {{\u0026lt; math \u0026gt;}}$...${{\u0026lt; /math \u0026gt;}} or {{\u0026lt; math \u0026gt;}}$$...$${{\u0026lt; /math \u0026gt;}}, respectively. (We wrap the LaTeX math in the Wowchemy math shortcode to prevent Hugo rendering our math as Markdown. The math shortcode is new in v5.5-dev.)\nExample math block:\n{{\u0026lt; math \u0026gt;}} $$ \\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2} $$ {{\u0026lt; /math \u0026gt;}} renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$ Example inline math {{\u0026lt; math \u0026gt;}}$\\nabla F(\\mathbf{x}_{n})${{\u0026lt; /math \u0026gt;}} renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the math linebreak (\\\\):\n{{\u0026lt; math \u0026gt;}} $$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$ {{\u0026lt; /math \u0026gt;}} renders as\n$$ f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases} $$ Diagrams Wowchemy supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ``` renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ``` renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ``` renders …","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://riccardorubini98.github.io/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Markdown","type":"post"},{"authors":["Riccardo Rubini"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example. Add the publication’s full text or supplementary notes here. You can use rich formatting such as including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://riccardorubini98.github.io/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":["Riccardo Rubini"],"categories":[],"content":"from IPython.core.display import Image Image(\u0026#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png\u0026#39;) print(\u0026#34;Welcome to Academic!\u0026#34;) Welcome to Academic! Install Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post\u0026#39;s title date: 2019-09-01 # Put any other Academic metadata here... --- Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post’s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=. Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"https://riccardorubini98.github.io/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://riccardorubini98.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Riccardo Rubini","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Add the publication’s full text or supplementary notes here. You can use rich formatting such as including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://riccardorubini98.github.io/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Riccardo Rubini","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Add the publication’s full text or supplementary notes here. You can use rich formatting such as including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://riccardorubini98.github.io/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]